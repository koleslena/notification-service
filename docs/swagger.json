{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a notification service",
        "title": "Notification Service API",
        "contact": {
            "name": "koleslena"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api",
    "paths": {
        "/clients": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "add a new client",
                "operationId": "create-client",
                "parameters": [
                    {
                        "description": "client data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Client"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ClientRequest"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/clients/{id}": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "edit a client by ID",
                "operationId": "update-client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of a client",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ClientRequest"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete a client by ID",
                "operationId": "delete-client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of a client",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/healthchecker": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get all items in the notification list",
                "operationId": "find-notifications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Notification"
                            }
                        }
                    },
                    "502": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "add a new notification",
                "operationId": "create-notification",
                "parameters": [
                    {
                        "description": "notification data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Notification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.NotificationRequest"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/{id}": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "edit a notification by ID",
                "operationId": "update-notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of a notification",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NotificationRequest"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete a notification by ID",
                "operationId": "delete-notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of a notification",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Client": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "phone_code": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "integer",
                    "example": 79998887766
                },
                "tag": {
                    "type": "string"
                },
                "time_zone": {
                    "type": "string"
                }
            }
        },
        "models.ClientRequest": {
            "type": "object",
            "properties": {
                "phone_code": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "integer"
                },
                "tag": {
                    "type": "string"
                },
                "time_zone": {
                    "type": "string"
                }
            }
        },
        "models.Filter": {
            "type": "object",
            "properties": {
                "phone_code": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notification_id": {
                    "type": "integer"
                },
                "state": {
                    "$ref": "#/definitions/models.State"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.Notification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-10-29T15:04:05Z"
                },
                "end_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-10-29T15:04:05Z"
                },
                "filter": {
                    "$ref": "#/definitions/models.Filter"
                },
                "id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.NotificationRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "end_at": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/definitions/models.Filter"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.State": {
            "type": "string",
            "enum": [
                "CREATED",
                "ERROR",
                "SENT"
            ],
            "x-enum-varnames": [
                "Created",
                "Error",
                "Sent"
            ]
        }
    }
}
